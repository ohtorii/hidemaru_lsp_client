if(version<891){
	message
	"秀丸エディタのバージョンが古いためマクロを実行できません。\n"	+
	"本マクロのドキュメントに記載されたバージョン以降の秀丸エディタをお使いください。";
	endmacro "0";
}

/////////////////////////////////////////////////////////////////////////////
//    グローバル変数
/////////////////////////////////////////////////////////////////////////////
$comClientFileName=@"%HOMEDRIVE%%HOMEPATH%\GitHub\hidemaru_lsp_client\project\HidemaruLspClient_FrontEnd\bin\Debug\HidemaruLspClient_FrontEnd.dll";
execmacro currentmacrodirectory+@"\expand_environment_strings.mac", $comClientFileName;
$comClientFileName=getresultex(-1);
$comServiceName="HidemaruLspClient_FrontEnd.Service";


$logFileName=@"%HOMEDRIVE%%HOMEPATH%\hidemaru_lsp_client.log";
execmacro currentmacrodirectory+@"\expand_environment_strings.mac", $logFileName;
$logFileName=getresultex(-1);


$rootFolder=currentmacrodirectory+@"\..";
$iniServerConfig=$rootFolder+"\\server_config.ini";
call GetAbsolutePathName $iniServerConfig;
$iniServerConfig=$$return;

$comObjectName="lsp.client.obj";
#comObjectShareMode=0;

/////////////////////////////////////////////////////////////////////////////
//    メイン処理
/////////////////////////////////////////////////////////////////////////////
call main;
endmacro str(##return);

main:
    call FindServerConfigFile filetype;
    $$absConfigFileName=$$return;
    if($$absConfigFileName==""){
        message "言語サーバの設定がIniファイル中で見つかりません";
        return false;
    }
    if(! existfile($$absConfigFileName)){
        message "ファイルが見つからない。"+$$absConfigFileName;
        return false;
    }

    $$obj = getstaticvariable($comObjectName,#comObjectShareMode);
    if($$obj!=""){
        ##obj = val($$obj);
    }else{
        ##obj = createobject($comClientFileName,$comServiceName);
        if(##obj==0){
            message "COMのロードに失敗しました";
            return false;
        }
        setcomdetachmethod ##obj,"Finalizer";
        ##n=callmethod_returnnum(##obj,"Initialize",$logFileName,$$absConfigFileName,directory2);
        if(##n==false){
            message "Initializeに失敗";
            return false;
        }
        /*##n=callmethod_returnnum(##obj,"CreateWorker",$$absConfigFileName,directory2);
        if(##n==false){
            message "CreateWorker に失敗";
            return false;
        }*/

        setstaticvariable $comObjectName,str(##obj),#comObjectShareMode;
        keepobject ##obj, 2;
    }
    menu      "ファイル内容を同期する（開発用）"
            , "Completion"
            , "Declaration"
            , "Definition"
            ;
    if(result==0){
        return;
    }else if(result==1){
        call LspSyncDocument ##obj;
        return ##return;
    }else if(result==2){
        call LspCompletion ##obj;
        return ##return;
    }else if(result==3){
        call LspDeclaration ##obj;
        return ##return;
    }else if(result==4){
        call LspDefinition ##obj;
        return ##return;
    }
    return false;

LspSyncDocument:
    ##obj=##1;
    ##success=callmethod_returnnum(##obj, "SyncDocument");
    return ##success;

LspCompletion:
    ##obj=##1;
    $$dictionalyFileName=callmethod_returnstr(##obj, "Completion",lineno,column_wcs);
    if($$dictionalyFileName==""){
        message "Completion に失敗";
        return false;
    }
    //Memo: マクロは中断される
    autocomplete 0, 0x00000002|0x00000004,0x00008050,$$dictionalyFileName;

    //Memo: マクロはこの行に到達しない
    return true;

LspDeclaration:
    ##obj=##1;
    ##foo=callmethod_returnnum(##obj, "Declaration",lineno,column_wcs);
    return ;

LspDefinition:
    ##obj=##1;
    ##LocationContainer=member(##obj, "Definition",lineno,column_wcs);
    if(##LocationContainer==0){
        return false;
    }
    call ForeachDefinitionContainer, ##LocationContainer, "DefinitionCallback";
    if(#g_definitionNum==0){
        return;
    }
    if(#g_definitionNum==1){
        call GotoDefinition $g_definitionAbsFilename[0], #g_definitionLine[0], #g_definitionCharacter[0];
        return ##return;
    }
    message "【未実装】Goto Definition の複数選択"
    //あとで実装する
    return true;

#g_definitionNum         =0;
$g_definitionAbsFilename[0] ="";
#g_definitionLine[0]     =0;
#g_definitionCharacter[0]=0;

GotoDefinition:
    $$absFilename=$$1;
    ##startLine=##2;
    ##startCharacter=##3;
    $$position=sprintf(R"(/j%d,%d)",##startLine,##startCharacter);
    openfile $$position + " " + $$absFilename;
    /*debuginfo 1;
    debuginfo "$$absFilename="+$$absFilename;
    debuginfo "##startLine="+str(##startLine);
    debuginfo "##startCharacter="+str(##startCharacter);*/

    return ;

DefinitionCallback:
    ##i=#g_definitionNum;

    $g_definitionAbsFilename[##i]  =$$1;
    #g_definitionLine[##i]         =##2;
    #g_definitionCharacter[##i]    =##3;

    #g_definitionNum = #g_definitionNum + 1;
    return ;

ForeachDefinitionContainer:
    ##LocationContainer=##1;
    $$callback=$$2;

    ##Length=member(##LocationContainer,"Length");
    ##i=0;
    while(##i < ##Length){
        ##Location      =member(##LocationContainer,"Item", ##i);
        $$absFilename   =member(##Location         ,"AbsFilename");
        ##Range         =member(##Location         ,"range");
        ##PositionStart =member(##Range            ,"start");
        ##PositionEnd   =member(##Range            ,"end");

        ##startLine     =member(##PositionStart    ,"line");
        ##startCharacter=member(##PositionStart    ,"character");
        ##endLine       =member(##PositionEnd      ,"line");
        ##endCharacter  =member(##PositionEnd      ,"character");

        call $$callback, $$absFilename, ##startLine, ##startCharacter;

        ##i = ##i + 1;
    }
    return ;

    /*
LspLint:
    ##obj=##1;
    $$diagnostics=callmethod_returnstr(##obj, "Diagnostics");
    //message $$diagnostics;
    ##outputHandle=loaddll("HmOutputPane.dll");

    //アウトプット枠の内容をクリア
    ##h=dllfunc(##outputHandle,"GetWindowHandle",hidemaruhandle(0));
    ##ret=sendmessage(##h,0x111,1009,0); //0x111==WM_COMMAND , 1009=クリア

    if($$diagnostics!=""){
        ##ret=dllfunc(##outputHandle,"Output",hidemaruhandle(0),$$diagnostics);
    }
    freedll(##outputHandle);
    return true;
*/


FindServerConfigFile:
    $$extension = $$1;
    $$configFilename=getinistrw($iniServerConfig, "ServerConfig", $$extension);
    if($$configFilename==""){
        return "";
    }
    $$absConfigFileName=$rootFolder+"\\"+$$configFilename;
    return $$absConfigFileName;

GetAbsolutePathName:
	##fso=createobject("Scripting.FileSystemObject");
	$$abs_filename = member(##fso,"GetAbsolutePathName",$$1);
	releaseobject ##fso;
    return $$abs_filename;
